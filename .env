# ===================================================
# VARIABLES
# ===================================================
# the name:tag for the application package to be published (e.g. registry-host/app-group/app-name)
# this package contains application artfacts, dockerfile & build.yaml file. it's used by image builder to build the application img
APP_PACKAGE_NAME=artisan.cmsee.stack/aps/new-spring-app
# the application name to create openshift tekton pipeline resources eg. EventListner & PipelineResources
APPLICATION_NAME=new-spring-app
# the email id which is used to generate crypto signature keys by using art cli
# this email id is used by img builder to sign the application image
CRYPTO_KEY_EMAIL=ani.p@atos.net
# the URI of the project GIT repository
GIT_URI=https://gitlab.com/sushil007pal/springboot-app.git
# openshift or kubernetes cluster hostname required to deploy app & create an ingress
# PACKAGE_NAME=
# the maven artifact id for the application
PROJECT_ARTIFACT_ID=flow-test
# the version of the application artifact
PROJECT_ARTIFACT_VERSION=0.0.1
# application runtime image registry name (eg. quay.io)
# this is the name of the image registry where base docker image is stored. it can be redhat, gitlab or quay registry
PULL_IMAGE_REGISTRY=registry.redhat.io
# the application image name. it's a final image name that will be pushed into the img registry
# we can pass any name (eg. java-app)
PUSH_IMAGE_NAME=springboot-app
# the image registry name (eg. quay.io)
# it's use to push application image into the image registry
PUSH_IMAGE_REGISTRY=docker.cmsee.stack
# the image repo name
# repo name of the image registry where image to be pushed. if repo is created under user then it will be username
# if it's created inside the specific group then it would be a group name
PUSH_IMAGE_REPO=
# the application image version/tag. it's a docker image tag used to identify the img uniquely
PUSH_IMAGE_VERSION=v.0.0.1
# the path the sonar scanner should use to scan binary files
# SONAR_BINARIES=
# the unique key identifying the project in the SonarQube server
# SONAR_PROJECT_KEY=
# the path the sonar scanner should use to scan source code
# SONAR_SOURCES=
# the URI of the SonarQube server to use for code quality reporting
# SONAR_URI=

# ===================================================
# SECRETS
# ===================================================
# the artisan registry password which is deployed into the openshift
ART_REG_PWD=wwq3Q2sfeNMi0CWa
# the artisan registry user name which is deployed into the openshift
ART_REG_USER=admin
# password for the container registry where the base image is located
PULL_IMAGE_REGISTRY_PWD=MohitAni$28
# user name for the container registry where the base image is located
PULL_IMAGE_REGISTRY_UNAME=anikp
# password for the container registry where the application image will be pushed
PUSH_IMAGE_REGISTRY_PWD=wwq3Q2sfeNMi0CWa
# user name for the container registry where the application image will be pushed
PUSH_IMAGE_REGISTRY_UNAME=admin
# artefact registry password where artefact will be pushed
REGISTRY_PWD=wwq3Q2sfeNMi0CWa
# artefact registry user name where artefact will be pushed
REGISTRY_USER=admin
# the token to access the Sonar server
# SONAR_TOKEN=

# ===================================================
# KEY PATHS
# ===================================================
# the path of the key in the artisan registry as described below:
# the private PGP key required to digitally sign the application package
SIGNING_KEY=/
# the path of the key in the artisan registry as described below:
# the public PGP key required to open the application package
VERIFICATION_KEY=/
